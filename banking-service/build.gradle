
plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'java'
    id 'com.palantir.docker' version '0.25.0'
}

group 'com.pay.banking'
version '1.0.1'

compileJava{
    targetCompatibility=11
}
apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/release' }
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    testImplementation 'com.tngtech.archunit:archunit:1.0.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.jetbrains:annotations:23.0.0'
    testImplementation 'junit:junit:4.13.1'
//    runtimeOnly 'org.postgresql:postgresql'
//    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.4'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation project(path:':common')

}

test {
    sourceCompatibility=11
    useJUnitPlatform()
}
docker {
    println(tasks.bootJar.outputs.files)
    // 이미지 이름
    name "shalsgh63/"+rootProject.name+'-'+project.name + ":" + version

    // Dokcerfile 대상 지정
    dockerfile file('../Dockerfile')

    // 어떤 파일들을 Dokcerfile에 복사할 것인지
    files tasks.bootJar.outputs.files

    // Dokcerfile에 전달할 인자
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}