services:
  axon-server:
    container_name: axon-server
    image: axoniq/axonserver:4.6.3-jdk-11-dev
    networks:
      - pay_network
    ports:
      - "8024:8024"
      - "8124:8124"
      - "8125:8125"
    volumes:
      - axonserver-data:/axonserver/data
      - axonserver-events:/axonserver/events
      - axonserver-config:/axonserver/config
  mysql:
    image: mysql:8.0
    networks:
      - pay_network
    volumes:
      - ./db/conf.d:/etc/mysql/conf.d
      - ./db/data:/var/lib/mysql
      - ./db/initdb.d:/docker-entrypoint-initdb.d
    env_file: .env
    ports:
      - "3306:3306"
    environment:
      - TZ=Asia/Seoul
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  membership-service:
    image: shalsgh63/pay-membership-service:1.0.3
    networks:
      - pay_network
    ports:
      - "8081:8080"
    depends_on:
      - mysql
      - vault
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/pay?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL5InnoDBDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=pay.logging.out.stdout
      - TASK_TOPIC=pay.task.topic
      - JWT_SECRET=${JWT_SECRET}
      - SPRING_CLOUD_VAULT_TOKEN=${SPRING_CLOUD_VAULT_TOKEN}
      - SPRING_CLOUD_VAULT_SCHEME=${SPRING_CLOUD_VAULT_SCHEME}
      - SPRING_CLOUD_VAULT_HOST=${SPRING_CLOUD_VAULT_HOST}
      - SPRING_CLOUD_VAULT_PORT=${SPRING_CLOUD_VAULT_PORT}
      - SPRING_CLOUD_VAULT_KV_PATH=${SPRING_CLOUD_VAULT_KV_PATH}
      - SPRING_CLOUD_VAULT_KV_KEY=${SPRING_CLOUD_VAULT_KV_KEY}
      - LOGGING_LEVEL_ROOT=INFO

  banking-service:
    image: shalsgh63/pay-banking-service:1.0.5
    networks:
      - pay_network
    ports:
      - "8082:8080"
    depends_on:
      - axon-server
      - mysql
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/pay?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL5InnoDBDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=pay.logging.out.stdout
      - TASK_TOPIC=pay.task.topic
      - SERVICE_MEMBERSHIP_URL=http://membership-service:8080
      - SPRING_CLOUD_VAULT_TOKEN=${SPRING_CLOUD_VAULT_TOKEN}
      - SPRING_CLOUD_VAULT_SCHEME=${SPRING_CLOUD_VAULT_SCHEME}
      - SPRING_CLOUD_VAULT_HOST=${SPRING_CLOUD_VAULT_HOST}
      - SPRING_CLOUD_VAULT_PORT=${SPRING_CLOUD_VAULT_PORT}
      - SPRING_CLOUD_VAULT_KV_PATH=${SPRING_CLOUD_VAULT_KV_PATH}
      - SPRING_CLOUD_VAULT_KV_KEY=${SPRING_CLOUD_VAULT_KV_KEY}

  money-service:
    image: shalsgh63/pay-money-service:1.0.0
    networks:
      - pay_network
    ports:
      - "8083:8080"
    depends_on:
      - axon-server
      - mysql
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/pay?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL5InnoDBDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=pay.logging.out.stdout
      - TASK_TOPIC=pay.task.topic
      - TASK_RESULT_TOPIC=pay.result.topic
      - SERVICE_MEMBERSHIP_URL=http://membership-service:8080
      - SERVICE_BANKING_URL=http://banking-service:8080
      - SPRING_CLOUD_VAULT_TOKEN=${SPRING_CLOUD_VAULT_TOKEN}
      - SPRING_CLOUD_VAULT_SCHEME=${SPRING_CLOUD_VAULT_SCHEME}
      - SPRING_CLOUD_VAULT_HOST=${SPRING_CLOUD_VAULT_HOST}
      - SPRING_CLOUD_VAULT_PORT=${SPRING_CLOUD_VAULT_PORT}
      - SPRING_CLOUD_VAULT_KV_PATH=${SPRING_CLOUD_VAULT_KV_PATH}
      - SPRING_CLOUD_VAULT_KV_KEY=${SPRING_CLOUD_VAULT_KV_KEY}
  remittance-service:
    image: shalsgh63/pay-remittance-service:1.0.0
    networks:
      - pay_network
    ports:
      - "8084:8080"
    depends_on:
      - axon-server
      - mysql
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/pay?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL5InnoDBDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=pay.logging.out.stdout
      - TASK_TOPIC=pay.task.topic
      - TASK_RESULT_TOPIC=pay.result.topic
      - SERVICE_MEMBERSHIP_URL=http://membership-service:8080
      - SERVICE_BANKING_URL=http://banking-service:8080
      - SERVICE_MONEY_URL=http://money-service:8080
      - SPRING_CLOUD_VAULT_TOKEN=${SPRING_CLOUD_VAULT_TOKEN}
      - SPRING_CLOUD_VAULT_SCHEME=${SPRING_CLOUD_VAULT_SCHEME}
      - SPRING_CLOUD_VAULT_HOST=${SPRING_CLOUD_VAULT_HOST}
      - SPRING_CLOUD_VAULT_PORT=${SPRING_CLOUD_VAULT_PORT}
      - SPRING_CLOUD_VAULT_KV_PATH=${SPRING_CLOUD_VAULT_KV_PATH}
      - SPRING_CLOUD_VAULT_KV_KEY=${SPRING_CLOUD_VAULT_KV_KEY}

  payment-service:
    image: shalsgh63/pay-payment-service:1.0.0
    networks:
      - pay_network
    ports:
      - "8085:8080"
    depends_on:
      - mysql
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/pay?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL5InnoDBDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=pay.logging.out.stdout
      - TASK_TOPIC=pay.task.topic
      - TASK_RESULT_TOPIC=pay.result.topic
      - SERVICE_MEMBERSHIP_URL=http://membership-service:8080
      - SERVICE_BANKING_URL=http://banking-service:8080
      - SERVICE_MONEY_URL=http://money-service:8080
      - SPRING_CLOUD_VAULT_TOKEN=${SPRING_CLOUD_VAULT_TOKEN}
      - SPRING_CLOUD_VAULT_SCHEME=${SPRING_CLOUD_VAULT_SCHEME}
      - SPRING_CLOUD_VAULT_HOST=${SPRING_CLOUD_VAULT_HOST}
      - SPRING_CLOUD_VAULT_PORT=${SPRING_CLOUD_VAULT_PORT}
      - SPRING_CLOUD_VAULT_KV_PATH=${SPRING_CLOUD_VAULT_KV_PATH}
      - SPRING_CLOUD_VAULT_KV_KEY=${SPRING_CLOUD_VAULT_KV_KEY}

  franchise-service:
    image: shalsgh63/pay-franchise-service:1.0.0
    networks:
      - pay_network
    ports:
      - "8086:8080"
    depends_on:
      - mysql
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/pay?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL5InnoDBDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=pay.logging.out.stdout
      - TASK_TOPIC=pay.task.topic
      - TASK_RESULT_TOPIC=pay.result.topic
      - SPRING_CLOUD_VAULT_TOKEN=${SPRING_CLOUD_VAULT_TOKEN}
      - SPRING_CLOUD_VAULT_SCHEME=${SPRING_CLOUD_VAULT_SCHEME}
      - SPRING_CLOUD_VAULT_HOST=${SPRING_CLOUD_VAULT_HOST}
      - SPRING_CLOUD_VAULT_PORT=${SPRING_CLOUD_VAULT_PORT}
      - SPRING_CLOUD_VAULT_KV_PATH=${SPRING_CLOUD_VAULT_KV_PATH}
      - SPRING_CLOUD_VAULT_KV_KEY=${SPRING_CLOUD_VAULT_KV_KEY}


  money-query-service:
    image: shalsgh63/pay-money-query-service:1.0.0
    networks:
      - pay_network
    ports:
      - "8087:8080"
    restart: always
    depends_on:
      - axon-server
      - kafka
      - mysql
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/pay?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL5InnoDBDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=fastcampus.logging.out.stdout
      - SERVICE_MEMBERSHIP_URL=http://membership-service:8080
      - SERVICE_BANKING_URL=http://banking-service:8080
      - SERVICE_MONEY_URL=http://money-service:8080
      - ACCESS_KEY_ID=${ACCESS_KEY_ID}
      - SECRET_ACCESS_KEY=${SECRET_ACCESS_KEY}
      - SPRING_CLOUD_VAULT_TOKEN=${SPRING_CLOUD_VAULT_TOKEN}
      - SPRING_CLOUD_VAULT_SCHEME=${SPRING_CLOUD_VAULT_SCHEME}
      - SPRING_CLOUD_VAULT_HOST=${SPRING_CLOUD_VAULT_HOST}
      - SPRING_CLOUD_VAULT_PORT=${SPRING_CLOUD_VAULT_PORT}
      - SPRING_CLOUD_VAULT_KV_PATH=${SPRING_CLOUD_VAULT_KV_PATH}
      - SPRING_CLOUD_VAULT_KV_KEY=${SPRING_CLOUD_VAULT_KV_KEY}


  settlement-service:
    image: shalsgh63/pay-settlement-service:1.0.0
    networks:
      - pay_network
    ports:
      - "8088:8080"
    depends_on:
      - mysql
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server:8124
      - AXON_SERIALIZER_EVENTS=jackson
      - AXON_SERIALIZER_MESSAGES=jackson
      - AXON_SERIALIZER_GENERAL=xstream
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/pay?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL5InnoDBDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=pay.logging.out.stdout
      - TASK_TOPIC=pay.task.topic
      - TASK_RESULT_TOPIC=pay.result.topic
      - SERVICE_BANKING_URL=http://banking-service:8080
      - SERVICE_MONEY_URL=http://money-service:8080
      - SERVICE_FRANCHISE_URL=http://franchise-service:8080
      - SERVICE_PAYMENT_URL=http://payment-service:8080
      - SPRING_BATCH_INITIALIZE_SCHEMA=always
      - SPRING_CLOUD_VAULT_TOKEN=${SPRING_CLOUD_VAULT_TOKEN}
      - SPRING_CLOUD_VAULT_SCHEME=${SPRING_CLOUD_VAULT_SCHEME}
      - SPRING_CLOUD_VAULT_HOST=${SPRING_CLOUD_VAULT_HOST}
      - SPRING_CLOUD_VAULT_PORT=${SPRING_CLOUD_VAULT_PORT}
      - SPRING_CLOUD_VAULT_KV_PATH=${SPRING_CLOUD_VAULT_KV_PATH}
      - SPRING_CLOUD_VAULT_KV_KEY=${SPRING_CLOUD_VAULT_KV_KEY}

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    networks:
      - pay_network
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_TLS_CLIENT_AUTH=none
      - ZOO_TLS_QUORUM_CLIENT_AUTH=none

  kafka:
    image: 'docker.io/bitnami/kafka:3.5'
    networks:
      - pay_network
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=LC://kafka:29092,LX://kafka:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LC:PLAINTEXT,LX:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LC
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    networks:
      - pay_network
    ports:
      - "8989:8080"
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  logging-consumer:
    image: shalsgh63/pay-logging-consumer:1.0.0
    networks:
      - pay_network
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=pay.logging.out.stdout

  task-consumer:
    image: shalsgh63/pay-task-consumer:1.0.0
    networks:
      - pay_network
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka:29092
      - LOGGING_TOPIC=pay.logging.out.stdout
      - TASK_TOPIC=pay.task.topic
      - TASK_RESULT_TOPIC=pay.result.topic

  vault:
    image: vault:1.13.1
    networks:
      - pay_network
    container_name: vault
    ports:
      - "8200:8200"
    restart: no
    cap_add:
      - IPC_LOCK
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=00000000-0000-0000-0000-000000000000
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    volumes:
      - vault-data:/vault/file
      - ${PWD}/init-vault.sh:/init-vault.sh  # 초기화 스크립트를 마운트


volumes:
  vault-data:
  axonserver-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/axon-server-se/data
  axonserver-events:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/axon-server-se/events
  axonserver-config:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/axon-server-se/config

networks:
  pay_network:
    driver: bridge
