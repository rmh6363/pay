name: CI for Microservices

env:
  MODULE: membership-service


on:
  push:
    branches: [ "main" ]
    paths:
      - banking-service/**
      - franchise-service/**
      - logging-consumer/**
      - membership-service/**
      - money-query-service/**
      - money-service/**
      - payment-service/**
      - remittance-service/**
      - settlement-service/**
      - task-consumer/**
  pull_request:
    branches: [ "main" ]
    paths:
      - banking-service/**
      - franchise-service/**
      - logging-consumer/**
      - membership-service/**
      - money-query-service/**
      - money-service/**
      - payment-service/**
      - remittance-service/**
      - settlement-service/**
      - task-consumer/**

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - banking-service/**
          - franchise-service/**
          - logging-consumer/**
          - membership-service/**
          - money-query-service/**
          - money-service/**
          - payment-service/**
          - remittance-service/**
          - settlement-service/**
          - task-consumer/**
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set environment variable
        run: echo "MODULE=${{ matrix.service }}" >> $GITHUB_ENV
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: pay-devops
          IMAGE_TAG: ${{ github.sha }}
          MODULE: ${{ env.MODULE }}  
        run: |
          docker build -t $REGISTRY/$REPOSITORY/${{ matrix.service }}:${IMAGE_TAG} -f ${{ matrix.service }}/Dockerfile .
          docker push $REGISTRY/$REPOSITORY/${{ matrix.service }}:${IMAGE_TAG}
          fi
