name: CI for Microservices

on:
  push:
    branches: [ "main" ]
    paths:
      - banking-service/**
      - franchise-service/**
      - logging-consumer/**
      - membership-service/**
      - money-query-service/**
      - money-service/**
      - payment-service/**
      - remittance-service/**
      - settlement-service/**
      - task-consumer/**

  pull_request:
    branches: [ "main" ]
    paths:
      - banking-service/**
      - franchise-service/**
      - logging-consumer/**
      - membership-service/**
      - money-query-service/**
      - money-service/**
      - payment-service/**
      - remittance-service/**
      - settlement-service/**
      - task-consumer/**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # 모든 커밋을 가져옵니다.

      - name: Get changed services
        id: get-changed-services
        run: |
          changed_services=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | \
          grep -E '^(banking-service|franchise-service|logging-consumer|membership-service|money-query-service|money-service|payment-service|remittance-service|settlement-service|task-consumer)/' | \
          awk -F '/' '{print $1}' | sort -u | tr '\n' ' ')
          echo "changed_services=${changed_services}" >> $GITHUB_ENV
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Build and push changed services
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: pay-devops
          IMAGE_TAG: ${{ github.sha }}
        run: |
          for service in ${{ env.changed_services }}; do
            echo "Building and pushing image for: $service"
            docker build --build-arg MODULE=${{ env.MODULE }} \
            -t $REGISTRY/$REPOSITORY/$service:${IMAGE_TAG} -f Dockerfile .
            docker push $REGISTRY/$REPOSITORY/$service:${IMAGE_TAG}
          done
