name: CI for Microservices

on:
  push:
    branches: [ "main" ]
    paths:
      - banking-service/**
      - franchise-service/**
      - logging-consumer/**
      - membership-service/**
      - money-query-service/**
      - money-service/**
      - payment-service/**
      - remittance-service/**
      - settlement-service/**
      - task-consumer/**

  pull_request:
    branches: [ "main" ]
    paths:
      - banking-service/**
      - franchise-service/**
      - logging-consumer/**
      - membership-service/**
      - money-query-service/**
      - money-service/**
      - payment-service/**
      - remittance-service/**
      - settlement-service/**
      - task-consumer/**

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - banking-service
          - franchise-service
          - logging-consumer
          - membership-service
          - money-query-service
          - money-service
          - payment-service
          - remittance-service
          - settlement-service
          - task-consumer

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # 모든 커밋을 가져옵니다.

      - name: Set environment variable
        run: echo "MODULE=${{ matrix.service }}" >> $GITHUB_ENV
        
      - name: Check if the service was changed
        id: check-changes
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "^${{ matrix.service }}/"; then
            echo "Service ${MODULE} has changes."
            echo "changed=true" >> $GITHUB_ENV
          else
            echo "No changes for ${MODULE}."
            echo "changed=false" >> $GITHUB_ENV
          fi

      - name: Exit if no changes
        if: env.changed == 'false'
        run: echo "Exiting as there are no changes for ${MODULE}."

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Debug GitHub Event
        run: |
          echo "Before Commit: ${{ github.event.before }}"
          echo "Current Commit: ${{ github.sha }}"

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: pay-devops
          IMAGE_TAG: ${{ github.sha }}
          MODULE: ${{ env.MODULE }}
    
        run: |
          # 변경된 서비스 목록을 가져옵니다.
          changed_services=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '^((banking-service|franchise-service|logging-consumer|membership-service|money-query-service|money-service|payment-service|remittance-service|settlement-service|task-consumer)/)' | awk -F '/' '{print $1}' | sort -u)

          # 변경된 서비스가 있는 경우 이미지 빌드 및 푸시
          for service in $changed_services; do
            echo "Building and pushing image for: $service"
            docker build -t $REGISTRY/$REPOSITORY/$service:${IMAGE_TAG} -f $service/Dockerfile .
            docker push $REGISTRY/$REPOSITORY/$service:${IMAGE_TAG}
          done
